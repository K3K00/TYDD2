// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "11/05/2024 14:37:18"

// 
// Device: Altera EP3C120F780C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module restador_completo (
	a,
	b,
	bin,
	f,
	bout);
input 	a;
input 	b;
input 	bin;
output 	f;
output 	bout;

// Design Ports Information
// f	=>  Location: PIN_AF22,	 I/O Standard: 2.5 V,	 Current Strength: Default
// bout	=>  Location: PIN_AH25,	 I/O Standard: 2.5 V,	 Current Strength: Default
// a	=>  Location: PIN_AG25,	 I/O Standard: 2.5 V,	 Current Strength: Default
// b	=>  Location: PIN_AD19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// bin	=>  Location: PIN_AD25,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("restador_completo_min_1200mv_0c_v_fast.sdo");
// synopsys translate_on

wire \f~output_o ;
wire \bout~output_o ;
wire \b~input_o ;
wire \a~input_o ;
wire \bin~input_o ;
wire \f~0_combout ;
wire \bout~0_combout ;


// Location: IOOBUF_X96_Y0_N2
cycloneiii_io_obuf \f~output (
	.i(\f~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\f~output_o ),
	.obar());
// synopsys translate_off
defparam \f~output .bus_hold = "false";
defparam \f~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X91_Y0_N16
cycloneiii_io_obuf \bout~output (
	.i(\bout~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\bout~output_o ),
	.obar());
// synopsys translate_off
defparam \bout~output .bus_hold = "false";
defparam \bout~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X94_Y0_N1
cycloneiii_io_ibuf \b~input (
	.i(b),
	.ibar(gnd),
	.o(\b~input_o ));
// synopsys translate_off
defparam \b~input .bus_hold = "false";
defparam \b~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X91_Y0_N22
cycloneiii_io_ibuf \a~input (
	.i(a),
	.ibar(gnd),
	.o(\a~input_o ));
// synopsys translate_off
defparam \a~input .bus_hold = "false";
defparam \a~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X100_Y0_N22
cycloneiii_io_ibuf \bin~input (
	.i(bin),
	.ibar(gnd),
	.o(\bin~input_o ));
// synopsys translate_off
defparam \bin~input .bus_hold = "false";
defparam \bin~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X92_Y1_N24
cycloneiii_lcell_comb \f~0 (
// Equation(s):
// \f~0_combout  = \b~input_o  $ (\a~input_o  $ (\bin~input_o ))

	.dataa(\b~input_o ),
	.datab(gnd),
	.datac(\a~input_o ),
	.datad(\bin~input_o ),
	.cin(gnd),
	.combout(\f~0_combout ),
	.cout());
// synopsys translate_off
defparam \f~0 .lut_mask = 16'hA55A;
defparam \f~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X92_Y1_N26
cycloneiii_lcell_comb \bout~0 (
// Equation(s):
// \bout~0_combout  = (\b~input_o  & ((\bin~input_o ) # (!\a~input_o ))) # (!\b~input_o  & (!\a~input_o  & \bin~input_o ))

	.dataa(\b~input_o ),
	.datab(gnd),
	.datac(\a~input_o ),
	.datad(\bin~input_o ),
	.cin(gnd),
	.combout(\bout~0_combout ),
	.cout());
// synopsys translate_off
defparam \bout~0 .lut_mask = 16'hAF0A;
defparam \bout~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign f = \f~output_o ;

assign bout = \bout~output_o ;

endmodule
